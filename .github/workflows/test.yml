name: Salesforce CI/CD

on:
  push:
    branches:
      - develop
      - master
      - release/**
      - feature/**
      - bugfix/**
      - hotfix/**
  pull_request:
    branches:
      - develop
      - master
      - release/**
      - feature/**
      - bugfix/**
      - hotfix/**
  workflow_dispatch:

jobs:
  decrypt_key:
    runs-on: ubuntu-latest
    steps:
      - name: Decrypt private key
        run: |
          openssl enc -nosalt -aes-256-cbc -d -in keys/server.key.enc -out keys/server.key -base64 -k ${{ secrets.DECRYPTION_KEY }} -md md5
        env:
          DECRYPTION_KEY: ${{ secrets.DECRYPTION_KEY }}

  generate_delta_changes:
    runs-on: ubuntu-latest
    steps:
      - name: Generate Delta Changes (From master)
        run: |
          mkdir changed-sources
          sfdx sgd:source:delta --to "HEAD" --from "origin/master" --output changed-sources --api-version 60.0 --generate-delta
        artifacts:
          - changed-sources/**

  deploy_to_qc:
    runs-on: ubuntu-latest
    needs: [decrypt_key, generate_delta_changes]
    steps:
      - name: Deploy to QC Org
        run: |
          sfdx force:auth:jwt:grant -s -i ${{ secrets.CONSUMERKEY_ORG }} -f keys/server.key -u ${{ secrets.USERNAME_ORG }} -r https://test.salesforce.com
          mkdir -p test-reports/deployment
          sf project deploy start --source-dir force-app --test-level RunLocalTests --junit --coverage-formatters clover --results-dir test-reports/deployment --api-version 60.0 --ignore-conflicts
        env:
          CONSUMERKEY_ORG: ${{ secrets.CONSUMERKEY_ORG }}
          USERNAME_ORG: ${{ secrets.USERNAME_ORG }}

  deploy_to_production:
    runs-on: ubuntu-latest
    needs: [decrypt_key, generate_delta_changes]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to Production Org
        run: |
          sfdx force:auth:jwt:grant -s -i ${{ secrets.CONSUMERKEY_ORG }} -f keys/server.key -u ${{ secrets.USERNAME_ORG }} -r https://login.salesforce.com
          mkdir -p test-reports/deployment
          sf project deploy start --source-dir force-app --test-level RunLocalTests --junit --coverage-formatters clover --results-dir test-reports/deployment --api-version 60.0 --ignore-conflicts
        env:
          CONSUMERKEY_ORG: ${{ secrets.CONSUMERKEY_ORG }}
          USERNAME_ORG: ${{ secrets.USERNAME_ORG }}

  run_code_analysis:
    runs-on: ubuntu-latest
    needs: decrypt_key
    strategy:
      matrix:
        analysis_type: [apex, aura, lwc]
    steps:
      - name: Install dependencies
        run: npm install

      - name: Run Apex Static Code Analysis
        if: matrix.analysis_type == 'apex'
        run: |
          mkdir -p test-reports/apex
          sfdx scanner:run --format=junit --outfile="test-reports/apex/junit.xml" --target 'changed-sources/**/*.cls,!./**/lwc/**,!./**/aura/**' --normalize-severity --severity-threshold 2

      - name: Run Aura Static Code Analysis
        if: matrix.analysis_type == 'aura'
        run: |
          mkdir -p test-reports/aura
          sfdx scanner:run --engine "eslint,retire-js" --format=junit --outfile="test-reports/aura/junit.xml" --target changed-sources/**/aura/**/*.js --eslintconfig force-app/main/default/aura/.eslintrc.json --normalize-severity --severity-threshold 2

      - name: Run LWC Static Code Analysis
        if: matrix.analysis_type == 'lwc'
        run: |
          mkdir -p test-reports/lwc
          sfdx scanner:run --engine "eslint-lwc,retire-js" --format=junit --outfile="test-reports/lwc/junit.xml" --target changed-sources/**/lwc/**/*.js --eslintconfig force-app/main/default/lwc/.eslintrc.json --normalize-severity --severity-threshold 2
        artifacts:
          - test-reports/**

  deploy_to_uat:
    runs-on: ubuntu-latest
    needs: [decrypt_key, generate_delta_changes]
    if: github.ref == 'refs/heads/release/**'
    steps:
      - name: Deploy to UAT Org
        run: |
          sfdx force:auth:jwt:grant -s -i ${{ secrets.CONSUMERKEY_ORG }} -f keys/server.key -u ${{ secrets.USERNAME_ORG }} -r https://test.salesforce.com
          mkdir -p test-reports/deployment
          sf project deploy start --source-dir force-app --test-level RunLocalTests --junit --coverage-formatters clover --results-dir test-reports/deployment --api-version 60.0 --ignore-conflicts
        env:
          CONSUMERKEY_ORG: ${{ secrets.CONSUMERKEY_ORG }}
          USERNAME_ORG: ${{ secrets.USERNAME_ORG }}

  deploy_pre_release:
    runs-on: ubuntu-latest
    needs: [decrypt_key, generate_delta_changes]
    if: github.ref == 'refs/heads/release/**'
    steps:
      - name: Deploy to Pre-release Org
        run: |
          sfdx force:auth:jwt:grant -s -i ${{ secrets.CONSUMERKEY_ORG }} -f keys/server.key -u ${{ secrets.USERNAME_ORG }} -r https://test.salesforce.com
          mkdir -p test-reports/deployment
          sf project deploy start --source-dir force-app --test-level RunLocalTests --junit --coverage-formatters clover --results-dir test-reports/deployment --api-version 60.0 --ignore-conflicts
        env:
          CONSUMERKEY_ORG: ${{ secrets.CONSUMERKEY_ORG }}
          USERNAME_ORG: ${{ secrets.USERNAME_ORG }}

  deploy_hotfix:
    runs-on: ubuntu-latest
    needs: [decrypt_key, generate_delta_changes]
    if: github.ref == 'refs/heads/hotfix/**'
    steps:
      - name: Deploy to Pre-release Org (Hotfix)
        run: |
          sfdx force:auth:jwt:grant -s -i ${{ secrets.CONSUMERKEY_ORG }} -f keys/server.key -u ${{ secrets.USERNAME_ORG }} -r https://test.salesforce.com
          mkdir -p test-reports/deployment
          sf project deploy start --source-dir force-app --test-level RunLocalTests --junit --coverage-formatters clover --results-dir test-reports/deployment --api-version 60.0 --ignore-conflicts
        env:
          CONSUMERKEY_ORG: ${{ secrets.CONSUMERKEY_ORG }}
          USERNAME_ORG: ${{ secrets.USERNAME_ORG }}
